generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id
  firstName String
  lastName  String
  email     String    @unique
  phone     String    @unique @db.VarChar(11)
  passcode  String?    @db.VarChar(4) 
  token     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Credit    Credit[]
  Payment   Payment[]
  Voice     Voice[]
}

model Shop {
  id        String    @id
  shopName  String
  address   String
  email     String    @unique
  phone     String    @unique @db.VarChar(11)
  token     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Payment   Payment[]
}

model Credit {
  id           Int       @id @default(autoincrement())
  userId       String
  creditNumber Int
  securityKey  Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User     @relation(fields: [userId], references: [id])
}

model Voice {
  id        Int       @id @default(autoincrement())
  userId    String
  voiceFile String 
  createdAt DateTime  @default(now())
  User      User      @relation(fields: [userId], references: [id])
  Payment   Payment[]
}

model Payment {
  id        Int       @id @default(autoincrement())
  userId    String
  shopId    String
  voiceId   Int
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Shop      Shop     @relation(fields: [shopId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
  Voice     Voice    @relation(fields: [voiceId], references: [id])
}
